'\" t
.\"     Title: odgi bin
.\"    Author: Erik Garrison, Simon Heumos
.\" Generator: Asciidoctor 2.0.10
.\"      Date: 2021-04-01
.\"    Manual: odgi bin
.\"    Source: odgi v0.6.0
.\"  Language: English
.\"
.TH "ODGI_BIN" "1" "2021-04-01" "odgi v0.6.0" "odgi bin"
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.ss \n[.ss] 0
.nh
.ad l
.de URL
\fI\\$2\fP <\\$1>\\$3
..
.als MTO URL
.if \n[.g] \{\
.  mso www.tmac
.  am URL
.    ad l
.  .
.  am MTO
.    ad l
.  .
.  LINKSTYLE blue R < >
.\}
.SH "NAME"
odgi_bin \- binning of pangenome sequence and path information in the graph
.SH "SYNOPSIS"
.sp
\fBodgi bin\fP [\fB\-i, \-\-idx\fP=\fIFILE\fP] [\fIOPTION\fP]...
.SH "DESCRIPTION"
.sp
The odgi bin(1) command bins a given variation graph. The pangenome sequence, the one\-time traversal of all nodes from smallest to
largest node identifier, can be summed up into bins of a specified size. For each bin, the path metainformation is summarized.
This enables a summarized view of gigabase scale graphs. Each step of a path is a bin and connected to its next bin via a link.
A link has a start bin identifier and an end bin identifier.
.br
The concept of odgi bin is also applied in odgi viz.
A demonstration of how the odgi bin JSON output can be used for an interactive visualization is realized in the \c
.URL "https://graph\-genome.github.io/" "Pantograph"
project. Per default, odgi bin writes the bins to stdout in a tab\-delimited format: \fBpath.name\fP, \fBpath.prefix\fP, \fBpath.suffix\fP,
\fBbin\fP (bin identifier), \fBmean.cov\fP (mean coverage of the path in this bin), \fBmean.inv\fP (mean inversion rate of this path in this bin),
\fBmean.pos\fP (mean nucleotide position of this path in this bin), \fBfirst.nucl\fP (first nucleotide position of this path in this bin),
\fBlast.nucl\fP (last nucleotide position of this path in this bin). These nucleotide ranges might span positions that are not present in the bin. Example:
A range of 1\-100 means that the first nucleotide has position 1 and the last has position 100, but nucleotide 45 could be located in
another bin. For an exact positional output, please specify [\fB\-j, \-\-json\fP].
.br
Running odgi bin in \c
.URL "https://github.com/tpook92/HaploBlocker" "HaploBlocker" " "
mode, only arguments [\fB\-b, \-\-haplo\-blocker\fP],
[\fB\-p[N], \-\-haplo\-blocker\-min\-paths[N]\fP], and [\fB\-c[N], \-\-haplo\-blocker\-min\-coverage[N]\fP] are required. A TSV is printed to stdout:
Each row corresponds to a node. Each column corresponds to a path. Each value is the coverage of a specific node of a specific path.
.SH "OPTIONS"
.SS "Graph Files IO"
.sp
\fB\-i, \-\-idx\fP=\fIFILE\fP
.RS 4
File containing the succinct variation graph to investigate the bin from. The file name usually ends with \fI.og\fP.
.RE
.SS "FASTA Options"
.sp
\fB\-f, \-\-fasta\fP=\fIFILE\fP
.RS 4
Write the pangenome sequence to \fIFILE\fP in FASTA format.
.RE
.SS "Bin Options"
.sp
\fB\-n, \-\-number\-bins\fP=\fIN\fP
.RS 4
The number of bins the pangenome sequence should be chopped up to.
.RE
.sp
\fB\-w, \-\-bin\-width\fP=\fIN\fP
.RS 4
The bin width specifies the size of each bin.
.RE
.sp
\fB\-D, \-\-path\-delim\fP=\fISTRING\fP
.RS 4
Annotate rows by prefix and suffix of this delimiter.
.RE
.sp
\fB\-a, \-\-aggregate\-delim\fP
.RS 4
Aggregate on path prefix delimiter. Argument depends on [\fB\-D, \-\-path\-delim\fP=\fISTRING\fP].
.RE
.sp
\fB\-j, \-\-json\fP
.RS 4
Print bins and links to stdout in pseudo JSON format. Each line is a valid JSON object, but the whole file is not a valid JSON!
First, each bin including its pangenome sequence is printed to stdout per line. Second, for each path in the graph, its
traversed bins including metainformation: \fBbin\fP (bin identifier), \fBmean.cov\fP (mean coverage of the path in this bin), \fBmean.inv\fP (mean inversion rate of this path in this bin),
\fBmean.pos\fP (mean nucleotide position of this path in this bin), and an array of ranges determining the nucleotide position
of the path in this bin. Switching first and last nucleotide in a range represents a complement reverse
orientation of that particular sequence.
.RE
.sp
\fB\-s, \-\-no\-seqs\fP
.RS 4
If [\fB\-j, \-\-json\fP] is set, no nucleotide sequences will be printed to stdout in order to save disk space.
.RE
.sp
\fB\-g, \-\-no\-gap\-links\fP
.RS 4
We divide links into 2 classes:
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.  sp -1
.  IP " 1." 4.2
.\}
the links which help to follow complex variations. They need to be drawn, else one could not follow the sequence of a path.
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.  sp -1
.  IP " 2." 4.2
.\}
the links helping to follow simple variations. These links are called \fBgap\-links\fP. Such links solely connecting a
path from left to right may not be relevant to understand a path\(cqs traversal through the bins. Therefore, when this option
is set, the gap\-links are left out saving disk space
.RE
.RE
.SS "HaploBlocker Options"
.sp
\fB\-b, \-\-haplo\-blocker\fP
.RS 4
Write a TSV to stdout formatted in a way ready for HaploBlocker: Each row corresponds to a node. Each column corresponds to a path.
Each value is the coverage of a specific node of a specific path.
.RE
.sp
\fB\-p[N], \-\-haplo\-blocker\-min\-paths[N]\fP
.RS 4
Specify the minimum number of paths that need to be present in the bin to actually report that bin. The default value is 1.
.RE
.sp
\fB\-c[N], \-\-haplo\-blocker\-min\-coverage[N]\fP
.RS 4
Specify the minimum coverage a path needs to have in a bin to actually report that bin. The default value is 1.
.RE
.SS "Program Information"
.sp
\fB\-h, \-\-help\fP
.RS 4
Print a help message for \fBodgi bin\fP.
.RE
.sp
\fB\-P, \-\-progress\fP
.RS 4
Write the current progress to stderr.
.RE
.SH "EXIT STATUS"
.sp
\fB0\fP
.RS 4
Success.
.RE
.sp
\fB1\fP
.RS 4
Failure (syntax or usage error; parameter error; file processing failure; unexpected error).
.RE
.SH "BUGS"
.sp
Refer to the \fBodgi\fP issue tracker at \c
.URL "https://github.com/pangenome/odgi/issues" "" "."
.SH "AUTHORS"
.sp
\fBodgi bin\fP was written by Erik Garrison and Simon Heumos
.SH "RESOURCES"
.sp
\fBProject web site:\fP \c
.URL "https://github.com/pangenome/odgi" "" ""
.sp
\fBGit source repository on GitHub:\fP \c
.URL "https://github.com/pangenome/odgi" "" ""
.sp
\fBGitHub organization:\fP \c
.URL "https://github.com/pangenome" "" ""
.sp
\fBDiscussion list / forum:\fP \c
.URL "https://github.com/pangenome/odgi/issues" "" ""
.SH "COPYING"
.sp
The MIT License (MIT)
.sp
Copyright (c) 2019\-2021 Erik Garrison
.sp
Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the "Software"), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
the Software, and to permit persons to whom the Software is furnished to do so,
subject to the following conditions:
.sp
The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.
.sp
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
.SH "AUTHOR"
.sp
Erik Garrison, Simon Heumos
.\" Man page generated from reStructuredText.
.
.TH "ODGI_BUILD" "1" "May 12, 2021" "v0.5.1" "odgi"
.SH NAME
odgi_build \- construct a dynamic succinct variation graph
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH SYNOPSIS
.sp
\fBodgi build\fP [\fB\-g, –gfa\fP=\fIFILE\fP] [\fB\-o, –out\fP=\fIFILE\fP]
[\fIOPTION\fP]…
.SH DESCRIPTION
.sp
The odgi build(1) command constructs a succinct variation graph from a
GFA. Currently, only GFA1 is supported. For details of the format please
see \fI\%https://github.com/GFA\-spec/GFA\-spec/blob/master/GFA1.md\fP\&.
.SH OPTIONS
.SS Graph Files IO
.nf
\fB\-g, –gfa\fP=\fIFILE\fP
GFA1 file containing the nodes, edges and paths to build a dynamic
succinct variation graph from.
.fi
.sp
.nf
\fB\-o, –out\fP=\fIFILE\fP
Write the dynamic succinct variation graph to this file. A file ending
with \fI\&.og\fP is recommended.
.fi
.sp
.SS Graph Sorting
.nf
\fB\-s, –sort\fP
Apply a general topological sort to the graph and order the node ids
accordingly. A bidirected adaptation of Kahn’s topological sort (1962)
is used, which can handle components with no heads or tails. Here,
both heads and tails are taken into account.
.fi
.sp
.SS Processing Information
.nf
\fB\-p, –progress\fP
Print progress updates to stdout.
.fi
.sp
.nf
\fB\-d, –debug\fP
Verbosely print graph information to stderr. This includes the maximum
node_id, the minimum node_id, the handle to node_id mapping, the
deleted nodes and the path metadata.
.fi
.sp
.nf
\fB–trace\fP
Include backtrace information when reporting errors.
.fi
.sp
.nf
\fB\-v, –verbose\fP
Verbosely print processing information to stderr, including
debug\-level log messages.
.fi
.sp
.nf
\fB\-w, –warnings\fP
Turn on script warnings (applies to executed code).
.fi
.sp
.nf
\fB\-t, –threads\fP=\fIN\fP
Number of threads to use for the parallel operations.
.fi
.sp
.SS Program Information
.nf
\fB\-h, –help\fP
Print a help message for \fBodgi build\fP\&.
.fi
.sp
.SH EXIT STATUS
.nf
\fB0\fP
Success.
.fi
.sp
.nf
\fB1\fP
Failure (syntax or usage error; parameter error; file processing
failure; unexpected error).
.fi
.sp
.SH BUGS
.sp
Refer to the \fBodgi\fP issue tracker at
\fI\%https://github.com/pangenome/odgi/issues\fP\&.
.SH AUTHOR
Erik Garrison
.SH COPYRIGHT
2021, Erik Garrison. Revision v0.5.1-e809b89
.\" Generated by docutils manpage writer.
.

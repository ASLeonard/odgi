<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<?asciidoc-toc?>
<?asciidoc-numbered?>

<article lang="en">
<articleinfo>
    <title>odgi build(1)</title>
</articleinfo>
<section id="_name">
<title>NAME</title>
<simpara>odgi_build - construct a dynamic succinct variation graph</simpara>
</section>
<section id="_synopsis">
<title>SYNOPSIS</title>
<simpara><emphasis role="strong">odgi build</emphasis> [<emphasis role="strong">-g, --gfa</emphasis>=<emphasis>FILE</emphasis>] [<emphasis role="strong">-o, --out</emphasis>=<emphasis>FILE</emphasis>] [<emphasis>OPTION</emphasis>]&#8230;</simpara>
</section>
<section id="_description">
<title>DESCRIPTION</title>
<simpara>The odgi build(1) command constructs a succinct variation graph from a GFA. Currently, only GFA1 is supported. For details of the format please see <ulink url="https://github.com/GFA-spec/GFA-spec/blob/master/GFA1.md">https://github.com/GFA-spec/GFA-spec/blob/master/GFA1.md</ulink>.</simpara>
</section>
<section id="_options">
<title>OPTIONS</title>
<section id="_graph_files_io">
<title>Graph Files IO</title>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">-g, --gfa</emphasis>=<emphasis>FILE</emphasis>
</term>
<listitem>
<simpara>
  GFA1 file containing the nodes, edges and paths to build a dynamic succinct variation graph from.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-o, --out</emphasis>=<emphasis>FILE</emphasis>
</term>
<listitem>
<simpara>
  Write the dynamic succinct variation graph to this file. A file ending with <emphasis>.og</emphasis> is recommended.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_graph_sorting">
<title>Graph Sorting</title>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">-s, --sort</emphasis>
</term>
<listitem>
<simpara>
  Apply a general topological sort to the graph and order the node ids accordingly. A bidirected adaptation of Kahn&#8217;s topological sort (1962) is used, which can handle components with no heads or tails. Here, both heads and tails are taken into account.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_processing_information">
<title>Processing Information</title>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">-p, --progress</emphasis>
</term>
<listitem>
<simpara>
  Print progress updates to stdout.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-d, --debug</emphasis>
</term>
<listitem>
<simpara>
  Verbosely print graph information to stderr. This includes the maximum node_id, the minimum node_id, the handle to node_id mapping, the deleted nodes and the path metadata.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">--trace</emphasis>
</term>
<listitem>
<simpara>
  Include backtrace information when reporting errors.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-v, --verbose</emphasis>
</term>
<listitem>
<simpara>
  Verbosely print processing information to stderr, including debug-level log messages.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-w, --warnings</emphasis>
</term>
<listitem>
<simpara>
  Turn on script warnings (applies to executed code).
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-t, --threads</emphasis>=<emphasis>N</emphasis>
</term>
<listitem>
<simpara>
  Number of threads to use for the parallel operations.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_program_information">
<title>Program Information</title>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">-h, --help</emphasis>
</term>
<listitem>
<simpara>
  Print a help message for <emphasis role="strong">odgi build</emphasis>.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
</section>
<section id="_exit_status">
<title>EXIT STATUS</title>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">0</emphasis>
</term>
<listitem>
<simpara>
  Success.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">1</emphasis>
</term>
<listitem>
<simpara>
  Failure (syntax or usage error; parameter error; file processing failure; unexpected error).
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_bugs">
<title>BUGS</title>
<simpara>Refer to the <emphasis role="strong">odgi</emphasis> issue tracker at <ulink url="https://github.com/pangenome/odgi/issues">https://github.com/pangenome/odgi/issues</ulink>.</simpara>
</section>
<section id="_authors">
<title>AUTHORS</title>
<simpara><emphasis role="strong">odgi build</emphasis> was written by Erik Garrison.</simpara>
</section>
</article>

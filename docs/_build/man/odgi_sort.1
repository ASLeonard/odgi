.\" Man page generated from reStructuredText.
.
.TH "ODGI_SORT" "1" "May 12, 2021" "v0.5.1" "odgi"
.SH NAME
odgi_sort \- sort a variation graph
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH SYNOPSIS
.sp
\fBodgi sort\fP [\fB\-i, –idx\fP=\fIFILE\fP] [\fB\-o, –out\fP=\fIFILE\fP]
[\fIOPTION\fP]…
.SH DESCRIPTION
.sp
The odgi sort(1) command sorts a succinct variation graph. Odgi sort
offers a diverse palette of sorting algorithms to determine the node
order:
.INDENT 0.0
.IP \(bu 2
A topological sort: A graph can be sorted via \fI\%breadth\-first search
(BFS)\fP or
\fI\%depth\-first search
(DFS)\fP\&.
Optionally, a chunk size specifies how much of the graph to grab at
once in each topological sorting phase. The sorting algorithm will
continue the sort from the next node in the prior graph order that
has not been sorted, yet. The cycle breaking algorithm applies a DFS
sort until a cycle is found. We break and start a new DFS sort phase
from where we stopped.
.IP \(bu 2
A random sort: The graph is randomly sorted. The node order is
randomly shuffled from \fI\%Mersenne Twister
pseudo\-random\fP
generated numbers.
.IP \(bu 2
A 1D linear SGD sort: Odgi implements a 1D linear, variation graph
adjusted, multi\-threaded version of the \fI\%Graph Drawing by Stochastic
Gradient Descent\fP algorithm. The
force\-directed graph drawing algorithm minimizes the graph’s energy
function or stress level. It applies stochastic gradient descent
(SGD) to move a single pair of nodes at a time.
.IP \(bu 2
A path guided, 1D linear SGD sort: Odgi implements a 1D linear,
variation graph adjusted, multi\-threaded version of the \fI\%Graph
Drawing by Stochastic Gradient
Descent\fP algorithm. The
force\-directed graph drawing algorithm minimizes the graph’s energy
function or stress level. It applies stochastic gradient descent
(SGD) to move a single pair of nodes at a time. The path index is
used to pick the terms to move stochastically. If ran with 1 thread
only, the resulting order of the graph is deterministic. The seed is
adjustable.
.UNINDENT
.sp
Sorting the paths in a graph my refine the sorting process. For the
users’ convenience, it is possible to specify a whole pipeline of sorts
within one parameter.
.SH OPTIONS
.SS Graph Files IO
.nf
\fB\-i, –idx\fP=\fIFILE\fP
File containing the succinct variation graph to sort. The file name
usually ends with \fI\&.og\fP\&.
.fi
.sp
.nf
\fB\-o, –out\fP=\fIFILE\fP
Write the sorted dynamic succinct variation graph to this file. A file
ending with \fI\&.og\fP is recommended.
.fi
.sp
.nf
\fB\-s, –sort\-order\fP=\fIFILE\fP
File containing the sort order. Each line contains one node
identifier.
.fi
.sp
.SS Topological Sorts
.nf
\fB\-b, –breadth\-first\fP
Use a (chunked) breadth first topological sort.
.fi
.sp
.nf
\fB\-B, –breadth\-first\-chunk\fP=\fIN\fP
Chunk size for breadth first topological sort. Specify how many
nucleotides to grap at once in each BFS phase.
.fi
.sp
.nf
\fB\-z, –depth\-first\fP
Use a (chunked) depth first topological sort.
.fi
.sp
.nf
\fB\-Z, –depth\-first\-chunk\fP=\fIN\fP
Chunk size for the depth first topological sort. Specify how many
nucleotides to grap at once in each DFS phace.
.fi
.sp
.nf
\fB\-w, –two\-way\fP
Use a two\-way topological algorithm for sorting. It is a maximum of
head\-first and tail\-first topological sort.
.fi
.sp
.nf
\fB\-n, –no\-seeds\fP
Don’t use heads or tails to seed topological sort.
.fi
.sp
.nf
\fB\-c, –cycle\-breaking\fP
Use a cycle breaking sort.
.fi
.sp
.SS Random Sort
.nf
\fB\-r, –random\fP
Randomly sort the graph.
.fi
.sp
.SS Path Guided 1D Linear SGD Sort
.nf
\fB\-Y, –path\-sgd\fP
Apply path guided 1D linear SGD algorithm to organize the graph.
.fi
.sp
.nf
\fB\-X, –path\-index\fP=\fIFILE\fP
Load the path index from this \fIFILE\fP\&.
.fi
.sp
.nf
\fB\-f, –path\-sgd\-use\-paths\fP=FILE
Specify a line separated list of paths to sample from for the on the
fly term generation process in the path guided linear 1D SGD. The
default value are \fIall paths\fP\&.
.fi
.sp
.nf
\fB\-G, –path\-sgd\-min\-term\-updates\-paths\fP=\fIN\fP
The minimum number of terms to be updated before a new path guided
linear 1D SGD iteration with adjusted learning rate eta starts,
expressed as a multiple of total path steps. The default value is
\fI1.0\fP\&. Can be overwritten by \fI\-U, \-path\-sgd\-min\-term\-updates\-nodes=N\fP\&.
.fi
.sp
.nf
\fB\-U, –path\-sgd\-min\-term\-updates\-nodes\fP=\fIN\fP
The minimum number of terms to be updated before a new path guided
linear 1D SGD iteration with adjusted learning rate eta starts,
expressed as a multiple of the number of nodes. Per default, the
argument is not set. The default of \fI\-G,
path\-sgd\-min\-term\-updates\-paths=N\fP is used).
.fi
.sp
.nf
\fB\-j, –path\-sgd\-delta\fP=\fIN\fP
The threshold of maximum displacement approximately in bp at which to
stop path guided linear 1D SGD. Default values is \fI0.0\fP\&.
.fi
.sp
.nf
\fB\-g, –path\-sgd\-eps\fP=\fIN\fP
The final learning rate for path guided linear 1D SGD model. The
default value is \fI0.01\fP\&.
.fi
.sp
.nf
\fB\-v, –path\-sgd\-eta\-max\fP=\fIN\fP
The first and maximum learning rate for path guided linear 1D SGD
model. The default value is \fIsquared steps of longest path in graph\fP\&.
.fi
.sp
.nf
\fB\-a, –path\-sgd\-zipf\-theta\fP=\fIN\fP
The theta value for the Zipfian distribution which is used as the
sampling method for the second node of one term in the path guided
linear 1D SGD model. The default value is \fI0.99\fP\&.
.fi
.sp
.nf
\fB\-x, –path\-sgd\-iter\-max\fP=\fIN\fP
The maximum number of iterations for path guided linear 1D SGD model.
The default value is \fI30\fP\&.
.fi
.sp
.nf
\fB\-F, –iteration\-max\-learning\-rate\fP=\fIN\fP
The iteration where the learning rate is max for path guided linear 1D
SGD model. The default value is \fI0\fP\&.
.fi
.sp
.nf
\fB\-k, –path\-sgd\-zipf\-space\fP=\fIN\fP
The maximum space size of the Zipfian distribution which is used as
the sampling method for the second node of one term in the path guided
linear 1D SGD model. The default value is the \fIlongest path length\fP\&.
.fi
.sp
.nf
\fB\-I, –path\-sgd\-zipf\-space\-max\fP=\fIN\fP
The maximum space size of the Zipfian distribution beyond which
quantization occurs. Default value is \fI100\fP\&.
.fi
.sp
.nf
\fB\-l, –path\-sgd\-zipf\-space\-quantization\-step\fP=\fIN\fP
Quantization step size when the maximum space size of the Zipfian
distribution is exceeded. Default value is \fI100\fP\&.
.fi
.sp
.nf
\fB\-y, –path\-sgd\-zipf\-max\-num\-distributions\fP=\fIN\fP
Approximate maximum number of Zipfian distributions to calculate. The
default value is \fI100\fP\&.
.fi
.sp
.nf
\fB\-q, –path\-sgd\-seed\fP=\fIN\fP
Set the seed for the deterministic 1\-threaded path guided linear 1D
SGD model. The default value is \fIpangenomic!\fP\&.
.fi
.sp
.nf
\fB\-u, –path\-sgd\-snapshot\fP=\fISTRING\fP
Set the prefix to which each snapshot graph of a path guided 1D SGD
iteration should be written to. This is turned off per default. This
argument only works when \fI\-Y, –path\-sgd\fP was specified. Not applicable
in a pipeline of sorts.
.fi
.sp
.SS Path Sorting Options
.nf
\fB\-L, –paths\-min\fP
Sort paths by their lowest contained node identifier.
.fi
.sp
.nf
\fB\-M, –paths\-max\fP
Sort paths by their highest contained node identifier.
.fi
.sp
.nf
\fB\-A, –paths\-avg\fP
Sort paths by their average contained node identifier.
.fi
.sp
.nf
\fB\-R, –paths\-avg\-rev\fP
Sort paths in reverse by their average contained node identifier.
.fi
.sp
.nf
\fB\-D, –path\-delim\fP=\fIpath\-delim\fP
Sort paths in bins by their prefix up to this delimiter.
.fi
.sp
.SS Pipeline Sorting
.nf
\fB\-p, –pipeline\fP=\fISTRING\fP
Apply a series of sorts, based on single character command line
arguments given to this command. The default sort is \fIs\fP\&. The reverse
sort would be specified via \fIf\fP\&.
.fi
.sp
.SS Additional Parameters
.nf
\fB\-d, –dagify\-sort\fP
Sort on the basis of a DAGified graph.
.fi
.sp
.nf
\fB\-O, –Optimize\fP
Use the MutableHandleGraph::optimize method to compact the node
identifier space.
.fi
.sp
.SS Threading
.nf
\fB\-t, –threads\fP=\fIN\fP
Number of threads to use for the parallel operations.
.fi
.sp
.SS Processing Information
.nf
\fB\-P, –progress\fP
Print sort progress to stdout.
.fi
.sp
.SS Program Information
.nf
\fB\-h, –help\fP
Print a help message for \fBodgi sort\fP\&.
.fi
.sp
.SH EXIT STATUS
.nf
\fB0\fP
Success.
.fi
.sp
.nf
\fB1\fP
Failure (syntax or usage error; parameter error; file processing
failure; unexpected error).
.fi
.sp
.SH BUGS
.sp
Refer to the \fBodgi\fP issue tracker at
\fI\%https://github.com/pangenome/odgi/issues\fP\&.
.SH AUTHOR
Simon Heumos, Andrea Guarracino, Erik Garrison
.SH COPYRIGHT
2021, Erik Garrison. Revision v0.5.1-e809b89
.\" Generated by docutils manpage writer.
.

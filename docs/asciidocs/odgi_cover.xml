<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<?asciidoc-toc?>
<?asciidoc-numbered?>

<article lang="en">
<articleinfo>
    <title>odgi cover(1)</title>
</articleinfo>
<section id="_name">
<title>NAME</title>
<simpara>odgi_cover - find a path cover of the variation graph</simpara>
</section>
<section id="_synopsis">
<title>SYNOPSIS</title>
<simpara><emphasis role="strong">odgi cover</emphasis> [<emphasis role="strong">-i, --idx</emphasis>=<emphasis>FILE</emphasis>] [<emphasis role="strong">-o, --out</emphasis>=<emphasis>FILE</emphasis>] [<emphasis>OPTION</emphasis>]&#8230;</simpara>
</section>
<section id="_description">
<title>DESCRIPTION</title>
<simpara>The odgi cover(1) command finds a path cover of a variation graph, with a specified number of paths per component.</simpara>
</section>
<section id="_options">
<title>OPTIONS</title>
<section id="_graph_files_io">
<title>Graph Files IO</title>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">-i, --idx</emphasis>=<emphasis>FILE</emphasis>
</term>
<listitem>
<simpara>
  File containing the succinct variation graph where find a path cover. The file name usually ends with <emphasis>.og</emphasis>.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-o, --out</emphasis>=<emphasis>FILE</emphasis>
</term>
<listitem>
<simpara>
  Write the succinct variation graph with the generated paths to <emphasis>FILE</emphasis>. The file name usually ends with <emphasis>.og</emphasis>.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_cover_options">
<title>Cover Options</title>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">-n, --num-paths-per-component</emphasis>=<emphasis>N</emphasis>
</term>
<listitem>
<simpara>
  Number of paths to generate per component.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-k, --node-windows-size</emphasis>=<emphasis>N</emphasis>
</term>
<listitem>
<simpara>
  Size of the node window to check each time a new path is extended (it has to be greater than or equal to 2).
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-c, --min-node-coverage</emphasis>=<emphasis>N</emphasis>
</term>
<listitem>
<simpara>
  Minimum node coverage to reach (it has to be greater than 0). There will be generated paths until the specified minimum node coverage is reached, or until the maximum number of allowed generated paths is reached (number of nodes in the input variation graph).
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-i, --ignore-paths</emphasis>
</term>
<listitem>
<simpara>
  Ignore the paths already embedded in the graph during the nodes coverage initialization.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">-w, --write-node-coverages</emphasis>=<emphasis>FILE</emphasis>
</term>
<listitem>
<simpara>
  Write the node coverages at the end of the paths generation to FILE. The file will contain tab-separated values (header included), and have 3 columns: <emphasis>component_id</emphasis>, <emphasis>node_id</emphasis>, and <emphasis>coverage</emphasis>.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_threading">
<title>Threading</title>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">-t, --threads</emphasis>=<emphasis>N</emphasis>
</term>
<listitem>
<simpara>
Number of threads to use for the parallel sorter.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_processing_information">
<title>Processing Information</title>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">-P, --progress</emphasis>
</term>
<listitem>
<simpara>
  Print information about the components and the progress to stderr.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_program_information">
<title>Program Information</title>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">-h, --help</emphasis>
</term>
<listitem>
<simpara>
  Print a help message for <emphasis role="strong">odgi cover</emphasis>.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
</section>
<section id="_exit_status">
<title>EXIT STATUS</title>
<variablelist>
<varlistentry>
<term>
<emphasis role="strong">0</emphasis>
</term>
<listitem>
<simpara>
  Success.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<emphasis role="strong">1</emphasis>
</term>
<listitem>
<simpara>
  Failure (syntax or usage error; parameter error; file processing failure; unexpected error).
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_bugs">
<title>BUGS</title>
<simpara>Refer to the <emphasis role="strong">odgi</emphasis> issue tracker at <ulink url="https://github.com/pangenome/odgi/issues">https://github.com/pangenome/odgi/issues</ulink>.</simpara>
</section>
<section id="_authors">
<title>AUTHORS</title>
<simpara><emphasis role="strong">odgi cover</emphasis> was written by Andrea Guarracino.</simpara>
</section>
</article>
